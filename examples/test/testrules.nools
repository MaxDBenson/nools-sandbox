define ArrayFact {
	array: null,
	constructor: function(a) {
		this.array = a;
	}
}

define Person {
	name: null,
	width: null,
	height: null,
	friends: null,
	constructor: function(n, w, h, f) {
		this.name = n;
		this.width = w;
		this.height = h;
		this.friends = f
	}
}

define BoringFact {
	value: "",
	nestedFact: null,
	constructor: function(v, nf) {
		this.value = v;
		this.nestedFact = nf;
	}
}

rule TallPerson {
	when {
		p: Person p.height > 5;
	}
	then {
		console.log("Got a tall person: "+p.name);
	}
}

rule Grow {
	when {
		p: Person p.height <= 5;
	}
	then {
		console.log(p.name + " needs to grow!");
		modify(p, "height", p.height+1);
	}
}

rule FromTest {
	when {
		p: Person;
		friend: String friend from p.friends
	}
	then {
		console.log(p.name+" has a friend named: "+friend);
		retract(p);
	}
}

rule bootstrap {
	when {
		p: Person;
	}
	then {
		var nestedFact = new BoringFact("inner");
		var outerFact = new BoringFact("outer", nestedFact);
		assert(nestedFact);
		assert(outerFact);
	}
}
